diff -au StepMania-3.9-src-orig/src/archutils/Unix/CrashHandler.cpp StepMania-3.9-src/src/archutils/Unix/CrashHandler.cpp
--- StepMania-3.9-src-orig/src/archutils/Unix/CrashHandler.cpp	2005-10-17 03:39:27.000000000 +0200
+++ StepMania-3.9-src/src/archutils/Unix/CrashHandler.cpp	2007-11-15 15:45:05.000000000 +0100
@@ -102,9 +102,9 @@
 	GetExecutableName( path, sizeof(path) );
 
 	/* Use execve; it's the lowest-level of the exec calls.  The others may allocate. */
-	char *argv[3] = { path, CHILD_MAGIC_PARAMETER, NULL };
+	const char *argv[3] = { path, CHILD_MAGIC_PARAMETER, NULL };
 	char *envp[1] = { NULL };
-	execve( path, argv, envp );
+	execve( path, (char* const*)argv, envp );
 
 	/* If we got here, the exec failed.  We can't call strerror. */
 	// safe_print(fileno(stderr), "Crash handler execl(", path, ") failed: ", strerror(errno), "\n", NULL);
diff -au StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp
--- StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp	2004-09-14 02:40:10.000000000 +0200
+++ StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp	2007-11-15 15:03:24.000000000 +0100
@@ -20,7 +20,7 @@
 	window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
 	gtk_window_set_position( GTK_WINDOW(window), GTK_WIN_POS_CENTER );
 	gtk_widget_realize(window);
-	loadmap = gdk_pixmap_create_from_xpm_d(window->window,NULL,NULL,loading);
+	loadmap = gdk_pixmap_create_from_xpm_d(window->window,NULL,NULL,(gchar **)loading);
 	loadimage = gtk_image_new_from_pixmap(loadmap,NULL);
 	label = gtk_label_new(NULL);
 	gtk_label_set_justify(GTK_LABEL(label),GTK_JUSTIFY_CENTER);
diff -au StepMania-3.9-src-orig/src/arch/LoadingWindow/loading.xpm StepMania-3.9-src/src/arch/LoadingWindow/loading.xpm
--- StepMania-3.9-src-orig/src/arch/LoadingWindow/loading.xpm	2002-11-18 22:37:58.000000000 +0100
+++ StepMania-3.9-src/src/arch/LoadingWindow/loading.xpm	2007-11-15 15:00:11.000000000 +0100
@@ -1,5 +1,5 @@
 /* XPM */
-static char *loading[] = {
+static const char *loading[] = {
 /* width height ncolors chars_per_pixel */
 "468 62 128 2",
 /* colors */
Index: src/crypto51/integer.cpp
===================================================================
--- a/src/crypto51/integer.cpp	(revision 28522)
+++ b/src/crypto51/integer.cpp	(working copy)
@@ -54,7 +54,7 @@
 template class AlignedAllocator<word>;
 #endif
 
-#define MAKE_DWORD(lowWord, highWord) ((dword(highWord)<<WORD_BITS) | (lowWord))
+#define MAKE_DWORD(lowWord, highWord) (((dword)highWord<<WORD_BITS) | (lowWord))
 
 static int Compare(const word *A, const word *B, unsigned int N)
 {
Index: src/GameManager.cpp
===================================================================
--- a/src/GameManager.cpp	(revision 28522)
+++ b/src/GameManager.cpp	(working copy)
@@ -66,7 +66,7 @@
 const int POPN9_COL_SPACING = 32; 
 
 static struct {
-	char *name;
+	const char *name;
 	int NumTracks;
 } const StepsTypes[NUM_STEPS_TYPES] = {
 	{ "dance-single",	4 },
